/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN DocumentActionsGenerated.js PLEASE EDIT ../DocumentActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import DocumentApi from "../../../api/DocumentApi";

let actionsFunction = {

  //CRUD METHODS

  // Create document
  createDocument: function(document) {
    return function(dispatch) {
      return DocumentApi
        .createDocument(document)
        .then(document => {
          dispatch(actionsFunction.createDocumentSuccess(document));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createDocumentSuccess: function(document) {
    return { type: types.CREATE_DOCUMENT_SUCCESS, payload: document };
  },


  // Delete document
  deleteDocument: function(id) {
    return function(dispatch) {
      return DocumentApi
        .deleteDocument(id)
        .then(document => {
          dispatch(actionsFunction.deleteDocumentSuccess(document));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteDocumentSuccess: function(document) {
    return { type: types.DELETE_DOCUMENT_SUCCESS, payload: document };
  },


  // Find by _users
  findBy_users: function(key) {
    return function(dispatch) {
      return DocumentApi
        .findBy_users(key)
        .then(item => {
          dispatch(actionsFunction.findBy_usersSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_usersSuccess: function(item) {
    return { type: types.FINDBY_USERS_DOCUMENT_SUCCESS, payload: item };
  },


  // Get document
  loadDocument: function(id) {
    return function(dispatch) {
      return DocumentApi
        .getOneDocument(id)
        .then(document => {
          dispatch(actionsFunction.loadDocumentSuccess(document));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDocumentSuccess: function(document) {
    return { type: types.GET_DOCUMENT_SUCCESS, payload: document };
  },

  // Load  list
  loadDocumentList: function() {
    return function(dispatch) {
      return DocumentApi
        .getDocumentList()
        .then(list => {
          dispatch(actionsFunction.loadDocumentListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDocumentListSuccess: function(list) {
    return { type: types.LIST_DOCUMENT_SUCCESS, payload: list };
  },

	
  // Save document
  saveDocument: function(document) {
    return function(dispatch) {
      return DocumentApi
        .saveDocument(document)
        .then(document => {
          dispatch(actionsFunction.saveDocumentSuccess(document));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveDocumentSuccess: function(document) {
    return { type: types.UPDATE_DOCUMENT_SUCCESS, payload: document };
  },


};

export default actionsFunction;
